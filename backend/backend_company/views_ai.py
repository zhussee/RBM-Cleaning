from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
import requests
import os

class AiChatView(APIView):
    def post(self, request):
        user_message = request.data.get("message", "")
        if not user_message:
            return Response({"reply": "–í–æ–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."}, status=status.HTTP_400_BAD_REQUEST)
        print("üîë OPENROUTER_API_KEY =", os.getenv("OPENROUTER_API_KEY"))
        headers = {
            "Authorization": f"Bearer {os.getenv('OPENROUTER_API_KEY')}",
            "Content-Type": "application/json",
        }

        payload = {
            "model": "openai/gpt-3.5-turbo",
            "messages": [
                {
                    "role": "system",
                    "content": (
                        "–¢—ã ‚Äî –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è —Å–∞–π—Ç–∞ –∫–ª–∏–Ω–∏–Ω–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã RBM Cleaning. "
                        "–û—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏, —á—ë—Ç–∫–æ, –∫—Ä–∞—Ç–∫–æ –∏ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–º–µ: —É–±–æ—Ä–∫–∞, —É—Å–ª—É–≥–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –æ–ø–ª–∞—Ç–∞. –¢—ã –±–µ—Ä–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å–∞–π—Ç–∞ https://rbm-cleaning.kz/catalog"
                        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤–Ω–µ —Ç–µ–º—ã ‚Äî —Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∫–ª–∏–Ω–∏–Ω–≥—É –∏ –Ω–µ –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å."
                    )
                },
                {
                    "role": "user",
                    "content": user_message
                }
            ]
        }

        try:
            response = requests.post(
                "https://openrouter.ai/api/v1/chat/completions",
                json=payload,
                headers=headers,
                timeout=15
            )
            response.raise_for_status()
            data = response.json()
            print("üåê –û—Ç–≤–µ—Ç –æ—Ç OpenRouter:", data)

            reply_text = data.get("choices", [{}])[0].get("message", {}).get("content", "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏.")
            return Response({"reply": reply_text})
        except requests.exceptions.RequestException as e:
            print("‚ùå –û—à–∏–±–∫–∞ HTTP:", str(e))
            return Response({"reply": "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å AI-—Å–µ—Ä–≤–∏—Å–æ–º."}, status=500)
        except Exception as e:
            print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:", str(e))
            return Response({"reply": "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞."}, status=500)

